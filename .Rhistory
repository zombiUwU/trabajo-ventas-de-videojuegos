"Codemasters",
"Idea Factory",
"Deep Silver",
"Nippon Ichi Software",
"Zoo Digital Publishing",
"Majesco Entertainment",
"LucasArts",
"Rising Star Games",
"Hudson Soft",
"Banpresto",
"Bethesda Softworks",
"Crave Entertainment",
"Atlus",
"Infogrames",
"Virgin Interactive",
"5pb",
"Ignition Entertainment",
"Focus Home Interactive",
"Desconocidas",
"Marvelous Interactive",
"Empire Interactive",
"SquareSoft",
"Kadokawa Shoten",
"Destineer",
"DTP Entertainment",
"GT Interactive",
"Alchemist",
"MTV Games",
"Global Star",
"PQube",
"SouthPeak Games",
"Spike",
"Takara Tomy",
"3DO",
"TDK Mediactive",
"BAM! Entertainment",
"Nordic Games",
"Black Bean Games",
"Zoo Games",
"Game Factory",
"Mindscape",
"Psygnosis",
"Enix Corporation",
"Interplay",
"Activision Value",
"Kalypso Media",
"FuRyu",
"Level 5",
"Prototype",
"Arc System Works",
"Avanquest",
"Little Orbit",
"Telltale Games",
"Midas Interactive Entertainment",
"Aqua Plus",
"Jaleco",
"Paradox Interactive",
"Universal Interactive",
"Broccoli",
"JoWood Productions",
"Oxygen Interactive",
"SNK",
"Kemco",
"ASCII Entertainment",
"Compile Heart",
"City Interactive",
"Storm City Games",
"Success",
"Taito",
"Titus",
"ChunSoft",
"SNK Playmore",
"Tomy Corporation",
"Zushi Games",
"DreamCatcher Interactive",
("Otros"))
publicaciones_de_las_empresas <- publicaciones_de_las_empresas %>%
mutate(Empresas = Publishers)
### Porcetaje de juegos publicados por cada empresa ###
total_publishers <- sum(publicaciones_de_las_empresas$Lanzamientos)
porcentaje_publishers  <- publicaciones_de_las_empresas %>%
mutate(porcentajes = Lanzamientos / total_publishers * 100) %>%
select(Empresas, Lanzamientos, porcentajes) %>%
arrange(desc(porcentajes))
### Top 15 empresas de videojuegos ###
porcentaje_top15 <- porcentaje_publishers %>%
slice_max(order_by = porcentajes, n = 15) %>%
arrange(desc(porcentajes))
grafico_publishers_videojuegos <- ggplot(data = porcentaje_top15,
aes(x = porcentajes,
y = reorder(Empresas,
porcentajes))) +
geom_bar(stat = "identity",
fill = "#A1D99B",
width = 0.7) +
geom_text(aes(label = paste0(round(porcentajes, 1), "%")),
hjust = -0.1, size = 3.5, color = "black") +
labs(title = "Top 15 Publishers por Porcentaje de Juegos Publicados",
x = "Porcentaje",
y = "Empresa") +
theme_classic() +
theme(axis.text.y = element_text(size = 10),
plot.title = element_text(hjust = 0.5, size = 14, face = "bold")) +
scale_x_continuous(limits = c(0, max(porcentaje_top15$porcentajes) * 1.1))
print(grafico_publishers_videojuegos)
### proceso de filtrado para la elaboracion del grafico de la distribucion de las ventas en el mundo ###
prueba <-  Data.informacion %>% arrange(desc(NA_Sales)) %>%
arrange(desc( EU_Sales)) %>%
arrange(desc(JP_Sales)) %>%
arrange(desc(Other_Sales)) %>%
select(NA_Sales, EU_Sales, JP_Sales, Other_Sales)
ganancia_total_EU <- sum(prueba$EU_Sales)
ganancia_total_NA <- sum(prueba$NA_Sales)
ganancia_total_JP <- sum(prueba$JP_Sales)
ganancia_total_Other <- sum(prueba$Other_Sales)
ganancia_total_global <- sum(prueba)
ganancias_totales <- c(2434.13,
1291.02,
4392.95,
797.75)
lugares <- c("EU",
"JP",
"NA",
"Other")
Ganancias <- data.frame(ganancias_totales, lugares)
porcentaje_de_ganancias <-  Ganancias %>%
group_by(ganancias_totales, lugares) %>%
count() %>%
ungroup() %>%
mutate(porcentaje = ganancias_totales / sum(ganancias_totales) * 100)
ggplot(data = porcentaje_de_ganancias,
aes(x = "", y = porcentaje, fill = lugares)) +
geom_bar(stat  = "identity") +
geom_text(aes(label = paste0(round(porcentaje,),"%")),
position = position_stack(vjust = 0.5)) +
coord_polar(theta = "y") +
theme_void() +
labs(title = "distribucion", subtitle = "de las ventas en las regiones") +
theme(plot.title = element_text(size = 25, family = "serif")) +
theme(plot.subtitle = element_text(size = 15, family = "serif"))
### filtrado final de la data ###
## analisis por region de estadisticas_descriptivas #
###estadisticas_descriptiva
### estados unidos
### todos los datos
estadisticas_USA <- Ventas_USA %>%
select(NA_Sales) %>%
filter(NA_Sales >= 0.01 )
cuartiles <- quantile(estadisticas_USA$NA_Sales, probs = c(0.25, 0.75))  #cuartiles 1 y 3
print(cuartiles)
riq_manual <- cuartiles["75%"] - cuartiles["25%"]  #rango intercuartilico
print(riq_manual)
mean(estadisticas_USA$NA_Sales)  #promedio
median(estadisticas_USA$NA_Sales) # mediana
var(estadisticas_USA$NA_Sales)  # varianza
sd(estadisticas_USA$NA_Sales)   # desviacion tipica
CV <- sd(estadisticas_USA$NA_Sales) / mean(estadisticas_USA$NA_Sales) * 100  #coeficiente de variacion
print(CV)
### los que llegan a unidades de millones
estadisticas_USA_max <- Ventas_USA %>%
select(NA_Sales) %>%
filter(NA_Sales >= 1.00 )
cuartiles <- quantile(estadisticas_USA_max$NA_Sales, probs = c(0.25, 0.75))  #cuartiles 1 y 3
print(cuartiles)
riq_manual <- cuartiles["75%"] - cuartiles["25%"]  #rango intercuartilico
print(riq_manual)
mean(estadisticas_USA_max$NA_Sales)  #promedio
median(estadisticas_USA_max$NA_Sales) # mediana
var(estadisticas_USA_max$NA_Sales)  # varianza
sd(estadisticas_USA_max$NA_Sales)   # desviacion tipica
CV <- sd(estadisticas_USA_max$NA_Sales) / mean(estadisticas_USA_max$NA_Sales) * 100  #coeficiente de variacion
print(CV)
### los que no llegan a unidades de millon
estadisticas_USA_min <- Ventas_USA %>%
select(NA_Sales) %>%
filter(NA_Sales <= 0.99, NA_Sales >= 0.01)
cuartiles <- quantile(estadisticas_USA_min$NA_Sales, probs = c(0.25, 0.75))  #cuartiles 1 y 3
print(cuartiles)
riq_manual <- cuartiles["75%"] - cuartiles["25%"]  #rango intercuartilico
print(riq_manual)
mean(estadisticas_USA_min$NA_Sales)  #promedio
median(estadisticas_USA_min$NA_Sales) # mediana
var(estadisticas_USA_min$NA_Sales)  # varianza
sd(estadisticas_USA_min$NA_Sales)   # desviacion tipica
CV <- sd(estadisticas_USA_min$NA_Sales) / mean(estadisticas_USA_min$NA_Sales) * 100  #coeficiente de variacion
print(CV)
### europa
### total de datos
estadisticas_EU <- Ventas_EU %>%
select(EU_Sales) %>%
filter(EU_Sales >= 0.01 )
cuartiles <- quantile(estadisticas_EU$EU_Sales, probs = c(0.25, 0.75))  #cuartiles 1 y 3
print(cuartiles)
riq_manual <- cuartiles["75%"] - cuartiles["25%"]  #rango intercuartilico
print(riq_manual)
mean(estadisticas_EU$EU_Sales)  #promedio
median(estadisticas_EU$EU_Sales) # mediana
var(estadisticas_EU$EU_Sales)  # varianza
sd(estadisticas_EU$EU_Sales)   # desviacion tipica
CV <- sd(estadisticas_EU$EU_Sales) / mean(estadisticas_EU$EU_Sales) * 100  #coeficiente de variacion
print(CV)
### los que llegan a unidades de millones
estadisticas_EU_max <- Ventas_EU %>%
select(EU_Sales) %>%
filter(EU_Sales >= 1.00 )
cuartiles <- quantile(estadisticas_EU_max$EU_Sales, probs = c(0.25, 0.75))  #cuartiles 1 y 3
print(cuartiles)
riq_manual <- cuartiles["75%"] - cuartiles["25%"]  #rango intercuartilico
print(riq_manual)
mean(estadisticas_EU_max$EU_Sales)  #promedio
median(estadisticas_EU_max$EU_Sales) # mediana
var(estadisticas_EU_max$EU_Sales)  # varianza
sd(estadisticas_EU_max$EU_Sales)   # desviacion tipica
CV <- sd(estadisticas_EU_max$EU_Sales) / mean(estadisticas_EU_max$EU_Sales) * 100  #coeficiente de variacion
print(CV)
### los que no llegan a unidades de millones
estadisticas_EU_min <- Ventas_EU %>%
select(EU_Sales) %>%
filter(EU_Sales <= 0.99, EU_Sales >= 00.1 )
cuartiles <- quantile(estadisticas_EU_min$EU_Sales, probs = c(0.25, 0.75))  #cuartiles 1 y 3
print(cuartiles)
riq_manual <- cuartiles["75%"] - cuartiles["25%"]  #rango intercuartilico
print(riq_manual)
mean(estadisticas_EU_min$EU_Sales)  #promedio
median(estadisticas_EU_min$EU_Sales) # mediana
var(estadisticas_EU_min$EU_Sales)  # varianza
sd(estadisticas_EU_min$EU_Sales)   # desviacion tipica
CV <- sd(estadisticas_EU_min$EU_Sales) / mean(estadisticas_EU_min$EU_Sales) * 100  #coeficiente de variacion
print(CV)
### Japon
### total de datos
estadisticas_JP <- Ventas_JP %>%
select(JP_Sales) %>%
filter(JP_Sales >= 0.01 )
cuartiles <- quantile(estadisticas_JP$JP_Sales, probs = c(0.25, 0.75))  #cuartiles 1 y 3
print(cuartiles)
riq_manual <- cuartiles["75%"] - cuartiles["25%"]  #rango intercuartilico
print(riq_manual)
mean(estadisticas_JP$JP_Sales)  #promedio
median(estadisticas_JP$JP_Sales) # mediana
var(estadisticas_JP$JP_Sales)  # varianza
sd(estadisticas_JP$JP_Sales)   # desviacion tipica
CV <- sd(estadisticas_JP$JP_Sales) / mean(estadisticas_JP$JP_Sales) * 100  #coeficiente de variacion
print(CV)
### los que llegan a unidades de millones
estadisticas_JP_max <- Ventas_JP %>%
select(JP_Sales) %>%
filter(JP_Sales >= 1.00 )
cuartiles <- quantile(estadisticas_JP_max$JP_Sales, probs = c(0.25, 0.75))  #cuartiles 1 y 3
print(cuartiles)
riq_manual <- cuartiles["75%"] - cuartiles["25%"]  #rango intercuartilico
print(riq_manual)
mean(estadisticas_JP_max$JP_Sales)  #promedio
median(estadisticas_JP_max$JP_Sales) # mediana
var(estadisticas_JP_max$JP_Sales)  # varianza
sd(estadisticas_JP_max$JP_Sales)   # desviacion tipica
CV <- sd(estadisticas_JP_max$JP_Sales) / mean(estadisticas_JP_max$JP_Sales) * 100  #coeficiente de variacion
print(CV)
### los que no llegan a unidades de millones
estadisticas_JP_min <- Ventas_JP %>%
select(JP_Sales) %>%
filter(JP_Sales <= 0.99, JP_Sales >= 00.1 )
cuartiles <- quantile(estadisticas_JP_min$JP_Sales, probs = c(0.25, 0.75))  #cuartiles 1 y 3
print(cuartiles)
riq_manual <- cuartiles["75%"] - cuartiles["25%"]  #rango intercuartilico
print(riq_manual)
mean(estadisticas_JP_min$JP_Sales)  #promedio
median(estadisticas_JP_min$JP_Sales) # mediana
var(estadisticas_JP_min$JP_Sales)  # varianza
sd(estadisticas_JP_min$JP_Sales)   # desviacion tipica
CV <- sd(estadisticas_JP_min$JP_Sales) / mean(estadisticas_JP_min$JP_Sales) * 100  #coeficiente de variacion
print(CV)
### Other
### total de datos
estadisticas_Other <- Ventas_Other %>%
select(Other_Sales) %>%
filter(Other_Sales >= 0.01 )
cuartiles <- quantile(estadisticas_Other$Other_Sales, probs = c(0.25, 0.75))  #cuartiles 1 y 3
print(cuartiles)
riq_manual <- cuartiles["75%"] - cuartiles["25%"]  #rango intercuartilico
print(riq_manual)
mean(estadisticas_Other$Other_Sales)  #promedio
median(estadisticas_Other$Other_Sales) # mediana
var(estadisticas_Other$Other_Sales)  # varianza
sd(estadisticas_Other$Other_Sales)   # desviacion tipica
CV <- sd(estadisticas_Other$Other_Sales) / mean(estadisticas_Other$Other_Sales) * 100  #coeficiente de variacion
print(CV)
### los que llegan a unidades de millones
estadisticas_Other_max <- Ventas_Other %>%
select(Other_Sales) %>%
filter(Other_Sales >= 1.00 )
cuartiles <- quantile(estadisticas_Other_max$Other_Sales, probs = c(0.25, 0.75))  #cuartiles 1 y 3
print(cuartiles)
riq_manual <- cuartiles["75%"] - cuartiles["25%"]  #rango intercuartilico
print(riq_manual)
mean(estadisticas_Other_max$Other_Sales)  #promedio
median(estadisticas_Other_max$Other_Sales) # mediana
var(estadisticas_Other_max$Other_Sales)  # varianza
sd(estadisticas_Other_max$Other_Sales)   # desviacion tipica
CV <- sd(estadisticas_Other_max$Other_Sales) / mean(estadisticas_Other_max$Other_Sales) * 100  #coeficiente de variacion
print(CV)
### los que no llegan a unidades de millones
estadisticas_Other_min <- Ventas_Other %>%
select(Other_Sales) %>%
filter(Other_Sales <= 0.99, Other_Sales >= 00.1 )
cuartiles <- quantile(estadisticas_Other_min$Other_Sales, probs = c(0.25, 0.75))  #cuartiles 1 y 3
print(cuartiles)
riq_manual <- cuartiles["75%"] - cuartiles["25%"]  #rango intercuartilico
print(riq_manual)
mean(estadisticas_Other_min$Other_Sales)  #promedio
median(estadisticas_Other_min$Other_Sales) # mediana
var(estadisticas_Other_min$Other_Sales)  # varianza
sd(estadisticas_Other_min$Other_Sales)   # desviacion tipica
CV <- sd(estadisticas_Other_min$Other_Sales) / mean(estadisticas_Other_min$Other_Sales) * 100  #coeficiente de variacion
print(CV)
### Analisis de las preferencias en consolas en consolas en las distintas decadas
# siglo 20
consolas_milenio  <- Usa_milenio2 %>%
select(Platform)  %>%
count(Platform, name = "Lanzamientos")
CM_ordenado  <- consolas_USA_milenio[order(-consolas_USA_milenio$Lanzamientos) , ]
print(CM_ordenado)
consolas_2000  <- Usa_2000 %>%
select(Platform)  %>%
count(Platform, name = "Lanzamientos")
C2000_ordenado  <- consolas_USA_2000[order(-consolas_USA_2000$Lanzamientos) , ]
print(C2000_ordenado)
consolas_2020  <- Usa_2020 %>%
select(Platform)  %>%
count(Platform, name = "Lanzamientos")
C2020_ordenado  <- consolas_USA_2020[order(-consolas_USA_2020$Lanzamientos) , ]
print(C2020_ordenado)
View(Ventas_USA)
grafico_generos_que_mas_generaron_USA <- ggplot(data = Ventas_USA, aes(x = NA_Sales, y = reorder(genre, NA_Sales ))) +
geom_bar(stat = "identity",
fill = "steelblue",
width = 0.7) +
geom_text(aes(label = paste0(round(porcentajes, 1), "%")),
hjust = -0.1, size = 3.5, color = "black") +
labs(title = "Generos que mas vendieron en USA",
x = "Ganancias",
y = "Género") +
theme_minimal() +
theme(axis.text.y = element_text(size = 10),
plot.title = element_text(hjust = 0.5, size = 14, face = "bold")) +
scale_x_continuous(limits = c(0, max(porcentaje_genero$porcentajes) * 1.1))
print(grafico_generos_que_mas_generaron_USA)
grafico_generos_que_mas_generaron_USA <- ggplot(data = Ventas_USA, aes(x = NA_Sales, y = reorder(Genre, NA_Sales ))) +
geom_bar(stat = "identity",
fill = "steelblue",
width = 0.7) +
geom_text(aes(label = paste0(round(porcentajes, 1), "%")),
hjust = -0.1, size = 3.5, color = "black") +
labs(title = "Generos que mas vendieron en USA",
x = "Ganancias",
y = "Género") +
theme_minimal() +
theme(axis.text.y = element_text(size = 10),
plot.title = element_text(hjust = 0.5, size = 14, face = "bold")) +
scale_x_continuous(limits = c(0, max(porcentaje_genero$porcentajes) * 1.1))
print(grafico_generos_que_mas_generaron_USA)
grafico_generos_que_mas_generaron_USA <- ggplot(data = Ventas_USA, aes(x = NA_Sales, y = reorder(Genre, NA_Sales ))) +
geom_bar(stat = "identity",
fill = "steelblue",
width = 0.7) +
geom_text(aes(label = paste0(round(NA_Sales, 1), "%")),
hjust = -0.1, size = 3.5, color = "black") +
labs(title = "Generos que mas vendieron en USA",
x = "Ganancias",
y = "Género") +
theme_minimal() +
theme(axis.text.y = element_text(size = 10),
plot.title = element_text(hjust = 0.5, size = 14, face = "bold")) +
scale_x_continuous(limits = c(0, max(porcentaje_genero$porcentajes) * 1.1))
print(grafico_generos_que_mas_generaron_USA)
grafico_generos_que_mas_generaron_USA <- ggplot(data = Ventas_USA, aes(x = NA_Sales, y = reorder(Genre, NA_Sales ))) +
geom_bar(stat = "identity",
fill = "steelblue",
width = 0.7) +
geom_text(aes(label = paste0(round(NA_Sales, 1), "%")),
hjust = -0.1, size = 3.5, color = "black") +
labs(title = "Generos que mas vendieron en USA",
x = "Ganancias",
y = "Género") +
theme_minimal() +
theme(axis.text.y = element_text(size = 10),
plot.title = element_text(hjust = 0.5, size = 14, face = "bold"))
print(grafico_generos_que_mas_generaron_USA)
grafico_generos_que_mas_generaron_USA <- ggplot(data = Ventas_USA, aes(x = NA_Sales, y = reorder(Genre, NA_Sales ))) +
geom_bar(stat = "identity",
fill = "steelblue",
width = 0.7) +
geom_text(aes(label = paste0(round(NA_Sales, 1), "%")),
hjust = -0.1, size = 3.5, color = "black") +
labs(title = "Generos que mas vendieron en USA",
x = "Ganancias",
y = "Género")
print(grafico_generos_que_mas_generaron_USA)
grafico_generos_que_mas_generaron_USA <- ggplot(data = Ventas_USA, aes(x = NA_Sales, y = reorder(Genre, NA_Sales ))) +
geom_bar(stat = "identity",
fill = "steelblue",
width = 0.7) +
labs(title = "Generos que mas vendieron en USA",
x = "Ganancias",
y = "Género")
print(grafico_generos_que_mas_generaron_USA)
grafico_generos_que_mas_generaron_USA <- ggplot(data = Ventas_USA, aes(x = NA_Sales, y = reorder(Genre, NA_Sales ))) +
geom_bar(stat = "identity",
fill = "steelblue",
width = 0.7) +
labs(title = "Producción de cada genero en USA",
x = "Ganancias",
y = "Género")
print(grafico_generos_que_mas_generaron_USA)
grafico_generos_que_mas_generaron_EU <- ggplot(data = Ventas_EU, aes(x = EU_Sales, y = reorder(Genre, EU_Sales ))) +
geom_bar(stat = "identity",
fill = "steelblue",
width = 0.7) +
labs(title = "Producción de cada genero en EU",
x = "Ganancias",
y = "Género")
print(grafico_generos_que_mas_generaron_EU)
grafico_generos_que_mas_generaron_JP <- ggplot(data = Ventas_JP, aes(x = NA_Sales, y = reorder(Genre, JP_Sales ))) +
geom_bar(stat = "identity",
fill = "steelblue",
width = 0.7) +
labs(title = "Producción de cada genero en JP",
x = "Ganancias",
y = "Género")
print(grafico_generos_que_mas_generaron_JP)
grafico_generos_que_mas_generaron_JP <- ggplot(data = Ventas_JP, aes(x = JP_Sales, y = reorder(Genre, JP_Sales ))) +
geom_bar(stat = "identity",
fill = "steelblue",
width = 0.7) +
labs(title = "Producción de cada genero en JP",
x = "Ganancias",
y = "Género")
print(grafico_generos_que_mas_generaron_JP)
grafico_generos_que_mas_generaron_Other <- ggplot(data = Ventas_Other, aes(x = Other_Sales, y = reorder(Genre, Other_Sales ))) +
geom_bar(stat = "identity",
fill = "steelblue",
width = 0.7) +
labs(title = "Producción de cada genero en USA",
x = "Ganancias",
y = "Género")
print(grafico_generos_que_mas_generaron_Other)
grafico_generos_que_mas_generaron_Other <- ggplot(data = Ventas_Other, aes(x = Other_Sales, y = reorder(Genre, Other_Sales ))) +
geom_bar(stat = "identity",
fill = "steelblue",
width = 0.7) +
labs(title = "Producción de cada genero en Other",
x = "Ganancias",
y = "Género")
print(grafico_generos_que_mas_generaron_Other)
print(C2000_ordenado)
View(consolas_2000)
View(consolas_2020)
View(consolas_de_lanzamiento)
View(consolas_milenio)
preferencia_de_las_consolas_milenio <- ggplot(data = CM_ordenado, aes(x = Lanzamientos, y = reorder(Platform, Lanzamientos ))) +
geom_bar(stat = "identity",
fill = "green",
width = 0.7) +
labs(title = "Prefencia de las consolas antes del 2000",
x = "preferencia de las consolas, antes del 2000  ",
y = "Género")
print(preferencia_de_las_consolas_milenio)
consolas_2010  <- Usa_2020 %>%
select(Platform)  %>%
count(Platform, name = "Lanzamientos")
C2020_ordenado  <- consolas_USA_2010[order(-consolas_USA_2010$Lanzamientos) , ]
consolas_2010  <- Usa_2020 %>%
select(Platform)  %>%
count(Platform, name = "Lanzamientos")
C2020_ordenado  <- consolas_USA_2010[order(-consolas_USA_2010$Lanzamientos) , ]
consolas_2010  <- Usa_2020 %>%
select(Platform)  %>%
count(Platform, name = "Lanzamientos")
C2010_ordenado  <- consolas_2010[order(-consolas_2010$Lanzamientos) , ]
print(C2010_ordenado)
preferencia_de_las_consolas_milenio <- ggplot(data = CM_ordenado, aes(x = Lanzamientos, y = reorder(Platform, Lanzamientos ))) +
geom_bar(stat = "identity",
fill = "green",
width = 0.7) +
labs(title = "Prefencia de las consolas antes del 2000",
x = "preferencia de las consolas, antes del 2000  ",
y = "Género")
print(preferencia_de_las_consolas_milenio)
preferencia_de_las_consolas_milenio <- ggplot(data = CM_ordenado, aes(x = Lanzamientos, y = reorder(Platform, Lanzamientos ))) +
geom_bar(stat = "identity",
fill = "green",
width = 0.7) +
labs(title = "Prefencia de las consolas antes del 2000",
x = "Cantidad de lanzamientos de esa consola  ",
y = "Consolas")
print(preferencia_de_las_consolas_milenio)
preferencia_de_las_consolas_2000 <- ggplot(data = C2000_ordenado, aes(x = Lanzamientos, y = reorder(Platform, Lanzamientos ))) +
geom_bar(stat = "identity",
fill = "green",
width = 0.7) +
labs(title = "Prefencia de las consolas en el 2000",
x = "Cantidad de lanzamientos de esa consola  ",
y = "Consolas")
print(preferencia_de_las_consolas_2000)
preferencia_de_las_consolas_2010 <- ggplot(data = C2010_ordenado, aes(x = Lanzamientos, y = reorder(Platform, Lanzamientos ))) +
geom_bar(stat = "identity",
fill = "green",
width = 0.7) +
labs(title = "Prefencia de las consolas en los 2010",
x = "Cantidad de lanzamientos de esa consola  ",
y = "Consolas")
print(preferencia_de_las_consolas_2010)
