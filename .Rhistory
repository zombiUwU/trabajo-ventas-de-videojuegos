use_git_config(
user.name = "kleyber", # Cambia esto por tu nombre
user.email = "ochetura2005@gmail.com" # Usa el email asociado a tu cuenta de GitHub
)
create_github_token()
gitcreds_set()
library(readr)
library(ggplot2)
library(dplyr)
library(tidyr)
library(here)
library(gitcreds)
library(usethis)
here()
ruta  <- here("data", "video_games_sales_corregido.csv")
Data.informacion <- read_csv(ruta)
print(Data.informacion)
Ventas_USA <- Data.informacion %>% arrange(desc(NA_Sales)) %>% select(Name, Platform, Year, Genre, Publisher, NA_Sales)
Ventas_EU <- Data.informacion %>% arrange(desc(EU_Sales)) %>% select(Name, Platform, Year, Genre, Publisher, EU_Sales)
Ventas_JP <- Data.informacion %>% arrange(desc(JP_Sales)) %>% select(Name, Platform, Year, Genre, Publisher, JP_Sales)
Ventas_Other <- Data.informacion %>% arrange(desc(Other_Sales)) %>% select(Name, Platform, Year, Genre, Publisher, Other_Sales )
### valores individuales de la data.infomacion ###
# cambio de variable de caracter a factor
Data.informacion$Genre <- as.factor(Data.informacion$Genre)
# agrupacion por genero
frecuencias_genre <- summary(Data.informacion$Genre)
frame_genre <-  data.frame(frecuencias_genre)
# cambio de variable a factor y agrupacion por publisher
Data.informacion$Publisher <- as.factor(Data.informacion$Publisher)
Lanzamientos <- summary(Data.informacion$Publisher)
publicaciones_de_las_empresas <- data.frame(Lanzamientos)
publicaciones_de_las_empresas %>% arrange(desc(Lanzamientos))
# cambio de variable a factor y agrupacion por consola
Data.informacion$Platform <- as.factor(Data.informacion$Platform)
Consolas <- summary(Data.informacion$Platform)
consolas_de_lanzamiento <- data.frame(Consolas)
consolas_de_lanzamiento %>% arrange(desc(Consolas))
### agrupaciones de epocas en los continentes ###
# estados Unidos
Usa_milenio2 <- Ventas_USA %>% filter(Year < 2000)
Usa_2000 <- Ventas_USA %>% filter(Year >= 2000, Year < 2010 )
Usa_2020 <-  Ventas_USA %>% filter(Year  >= 2010 )
# Europa
EU_milenio2 <- Ventas_EU %>% filter(Year < 2000)
EU_2000 <- Ventas_EU %>% filter(Year >= 2000, Year < 2010 )
EU_2020 <-  Ventas_EU %>% filter(Year  >= 2010 )
# Japon
JP_siglo20 <- Ventas_JP %>% filter(Year < 2000)
JP_2000 <- Ventas_JP %>% filter(Year >= 2000, Year < 2010 )
JP_2020 <-  Ventas_JP %>% filter(Year  >= 2010 )
# Otros
Other_siglo20 <- Ventas_Other %>% filter(Year < 2000)
Other_2000 <- Ventas_Other %>% filter(Year >= 2000, Year < 2010 )
Other_2020 <-  Ventas_Other %>% filter(Year  >= 2010 )
### creacion de columna generos ###
generos <- c("Acción",
"Aventura",
"Carreras",
"Deportes",
"Disparos",
"Estrategia",
"Juegos de rol",
"Pelea",
"Plataforma",
"rompecabezas",
"Simulacion",
"Varios")
frame_genre <- frame_genre %>%
mutate(genre = generos)
### porcentaje de la frecuencia de los generos de videojuegos ###
total_genre <- sum(frame_genre$frecuencias_genre)
porcentaje_genero  <- frame_genre  %>%
mutate(porcentajes = frecuencias_genre / total_genre * 100) %>%
select(genre, frecuencias_genre, porcentajes) %>%
arrange(desc(porcentajes))
### Grafico de barras para el codigo anterior ###
grafico_genre_videojuegos <- ggplot(data = porcentaje_genero, aes(x = porcentajes, y = reorder(genre, porcentajes))) +
geom_bar(stat = "identity",
fill = "steelblue",
width = 0.7) +
geom_text(aes(label = paste0(round(porcentajes, 1), "%")),
hjust = -0.1, size = 3.5, color = "black") +
labs(title = "Porcentaje de Frecuencia por Género de Videojuegos",
x = "Porcentaje",
y = "Género") +
theme_minimal() +
theme(axis.text.y = element_text(size = 10),
plot.title = element_text(hjust = 0.5, size = 14, face = "bold")) +
scale_x_continuous(limits = c(0, max(porcentaje_genero$porcentajes) * 1.1))
print(grafico_genre_videojuegos)
### creacion de columna publishers ###
Publishers <- c("Electronic Arts",
"Activision" ,
"Namco Bandai Games",
"Ubisoft",
"Konami Digital Entertainment",
"THQ",
"Nintendo",
"Sony Computer Entertainment",
"Sega",
"Take-Two Interactive",
"Capcom",
"Atari",
"Tecmo Koei",
"Square Enix",
"Warner Bros. Interactive Entertainment",
"Disney Interactive Studios",
"Unknown",
"Eidos Interactive",
"Midway Games",
"505 Games",
"Microsoft Game Studios",
"Acclaim Entertainment",
"D3Publisher",
"Vivendi Games",
"Codemasters",
"Idea Factory",
"Deep Silver",
"Nippon Ichi Software",
"Zoo Digital Publishing",
"Majesco Entertainment",
"LucasArts",
"Rising Star Games",
"Hudson Soft",
"Banpresto",
"Bethesda Softworks",
"Crave Entertainment",
"Atlus",
"Infogrames",
"Virgin Interactive",
"5pb",
"Ignition Entertainment",
"Focus Home Interactive",
"Desconocidas",
"Marvelous Interactive",
"Empire Interactive",
"SquareSoft",
"Kadokawa Shoten",
"Destineer",
"DTP Entertainment",
"GT Interactive",
"Alchemist",
"MTV Games",
"Global Star",
"PQube",
"SouthPeak Games",
"Spike",
"Takara Tomy",
"3DO",
"TDK Mediactive",
"BAM! Entertainment",
"Nordic Games",
"Black Bean Games",
"Zoo Games",
"Game Factory",
"Mindscape",
"Psygnosis",
"Enix Corporation",
"Interplay",
"Activision Value",
"Kalypso Media",
"FuRyu",
"Level 5",
"Prototype",
"Arc System Works",
"Avanquest",
"Little Orbit",
"Telltale Games",
"Midas Interactive Entertainment",
"Aqua Plus",
"Jaleco",
"Paradox Interactive",
"Universal Interactive",
"Broccoli",
"JoWood Productions",
"Oxygen Interactive",
"SNK",
"Kemco",
"ASCII Entertainment",
"Compile Heart",
"City Interactive",
"Storm City Games",
"Success",
"Taito",
"Titus",
"ChunSoft",
"SNK Playmore",
"Tomy Corporation",
"Zushi Games",
"DreamCatcher Interactive",
("Otros"))
publicaciones_de_las_empresas <- publicaciones_de_las_empresas %>%
mutate(Empresas = Publishers)
### Porcetaje de juegos publicados por cada empresa ###
total_publishers <- sum(publicaciones_de_las_empresas$Lanzamientos)
porcentaje_publishers  <- publicaciones_de_las_empresas %>%
mutate(porcentajes = Lanzamientos / total_publishers * 100) %>%
select(Empresas, Lanzamientos, porcentajes) %>%
arrange(desc(porcentajes))
### Top 15 empresas de videojuegos ###
porcentaje_top15 <- porcentaje_publishers %>%
slice_max(order_by = porcentajes, n = 15) %>%
arrange(desc(porcentajes))
grafico_publishers_videojuegos <- ggplot(data = porcentaje_top15,
aes(x = porcentajes,
y = reorder(Empresas,
porcentajes))) +
geom_bar(stat = "identity",
fill = "#A1D99B",
width = 0.7) +
geom_text(aes(label = paste0(round(porcentajes, 1), "%")),
hjust = -0.1, size = 3.5, color = "black") +
labs(title = "Top 15 Publishers por Porcentaje de Juegos Publicados",
x = "Porcentaje",
y = "Empresa") +
theme_classic() +
theme(axis.text.y = element_text(size = 10),
plot.title = element_text(hjust = 0.5, size = 14, face = "bold")) +
scale_x_continuous(limits = c(0, max(porcentaje_top15$porcentajes) * 1.1))
print(grafico_publishers_videojuegos)
porcentaje_top15 <- porcentaje_publishers %>%
slice_max(order_by = porcentajes, n = 15) %>%
arrange(desc(porcentajes))
grafico_publishers_videojuegos <- ggplot(data = porcentaje_top15,
aes(x = porcentajes,
y = reorder(Empresas,
porcentajes))) +
geom_bar(stat = "identity",
fill = "#A1D99B",
width = 0.7) +
geom_text(aes(label = paste0(round(porcentajes, 1), "%")),
hjust = -0.1, size = 3.5, color = "black") +
labs(title = "Top 15 Publishers por Porcentaje de Juegos Publicados",
x = "Porcentaje",
y = "Empresa") +
theme_classic() +
theme(axis.text.y = element_text(size = 10),
plot.title = element_text(hjust = 0.5, size = 14, face = "bold")) +
scale_x_continuous(limits = c(0, max(porcentaje_top15$porcentajes) * 1.1))
print(grafico_publishers_videojuegos)
View(Ventas_JP)
View(EU_milenio2)
View(Ventas_USA)
View(Usa_milenio2)
Usa_milenio2 <- Ventas_USA %>% filter(Year < 2000, NA_Sales >= 0.01)
Usa_milenio2 <- Ventas_USA %>% filter(Year < 2000, NA_Sales >= 0.01)
EU_milenio2 <- Ventas_EU %>% filter(Year < 2000, EU_Sales >= 0.01)
Other_siglo20 <- Ventas_Other %>% filter(Year < 2000, Other_Sales >= 0.01)
Other_milenio2 <- Ventas_Other %>% filter(Year < 2000, Other_Sales >= 0.01)
View(Other_milenio2)
Usa_milenio2 <- Ventas_USA %>% filter(Year < 2000, NA_Sales >= 0.01)
Usa_2000 <- Ventas_USA %>% filter(Year >= 2000, Year < 2010, NA_Sales >= 0.01 )
Usa_2020 <-  Ventas_USA %>% filter(Year  >= 2010, NA_Sales >= 0.01 )
# Europa
EU_milenio2 <- Ventas_EU %>% filter(Year < 2000, EU_Sales >= 0.01)
EU_2000 <- Ventas_EU %>% filter(Year >= 2000, Year < 2010, EU_Sales >= 0.01 )
EU_2020 <-  Ventas_EU %>% filter(Year  >= 2010, EU_Sales >= 0.01 )
# Japon
JP_milenio2 <- Ventas_JP %>% filter(Year < 2000, JP_Sales >= 0.01)
JP_2000 <- Ventas_JP %>% filter(Year >= 2000, Year < 2010, JP_Sales >= 0.01 )
JP_2020 <-  Ventas_JP %>% filter(Year  >= 2010, JP_Sales >= 0.01 )
# Otros
Other_milenio2 <- Ventas_Other %>% filter(Year < 2000, Other_Sales >= 0.01)
Other_2000 <- Ventas_Other %>% filter(Year >= 2000, Year < 2010, Other_Sales >= 0.01 )
Other_2020 <-  Ventas_Other %>% filter(Year  >= 2010, Other_Sales >= 0.01 )
View(Data.informacion)
prueba <-  Data.informacion %>% select(NA_Sales, EU_Sales, JP_Sales, Other_Sales) %>%
summary(totales = n())
distribucion_ventas <- data.frame(prueba)
View(distribucion_ventas)
prueba <-  Data.informacion %>%
group_by(NA_Sales, EU_Sales, JP_Sales, Other_Sales) %>%
count() %>%
ungroup() %>%
mutate(totales = sum(n))
View(prueba)
prueba <-  Data.informacion %>% arrange(NA_Sales, EU_Sales, JP_Sales, Other_Sales) %>%
group_by(NA_Sales, EU_Sales, JP_Sales, Other_Sales) %>%
count() %>%
ungroup() %>%
mutate(totales = sum(n))
distribucion_ventas <- data.frame(prueba)
View(prueba)
prueba <-  Data.informacion %>% arrange(desc(NA_Sales, EU_Sales, JP_Sales, Other_Sales)) %>%
group_by(NA_Sales, EU_Sales, JP_Sales, Other_Sales) %>%
count() %>%
ungroup() %>%
mutate(totales = sum(n))
prueba <-  Data.informacion %>% arrange(desc(NA_Sales)) %>%
arrange(desc( EU_Sales)) %>%
arrange(desc(JP_Sales)) %>%
arrange(desc(Other_Sales)) %>%
group_by(NA_Sales, EU_Sales, JP_Sales, Other_Sales) %>%
count() %>%
ungroup() %>%
mutate(totales = sum(n))
prueba <-  Data.informacion %>% arrange(desc(NA_Sales)) %>%
arrange(desc( EU_Sales)) %>%
arrange(desc(JP_Sales)) %>%
arrange(desc(Other_Sales)) %>%
group_by(NA_Sales, EU_Sales, JP_Sales, Other_Sales) %>%
prueba <-  Data.informacion %>% arrange(desc(NA_Sales)) %>%
arrange(desc( EU_Sales)) %>%
arrange(desc(JP_Sales)) %>%
arrange(desc(Other_Sales)) %>%
group_by(NA_Sales, EU_Sales, JP_Sales, Other_Sales) %>%
prueba <-  Data.informacion %>% arrange(desc(NA_Sales)) %>%
arrange(desc( EU_Sales)) %>%
arrange(desc(JP_Sales)) %>%
arrange(desc(Other_Sales)) %>%
group_by(NA_Sales, EU_Sales, JP_Sales, Other_Sales)
prueba <-  Data.informacion %>% arrange(desc(NA_Sales)) %>%
arrange(desc( EU_Sales)) %>%
arrange(desc(JP_Sales)) %>%
arrange(desc(Other_Sales)) %>%
group_by(NA_Sales, EU_Sales, JP_Sales, Other_Sales)
View(prueba)
prueba <-  Data.informacion %>% arrange(desc(NA_Sales)) %>%
arrange(desc( EU_Sales)) %>%
arrange(desc(JP_Sales)) %>%
arrange(desc(Other_Sales)) %>%
select(NA_Sales, EU_Sales, JP_Sales, Other_Sales)
View(prueba)
library(readr)
library(ggplot2)
library(dplyr)
library(tidyr)
library(here)
library(gitcreds)
library(usethis)
# ruta para que funcione en cualquier pc
here()
ruta  <- here("data", "video_games_sales_corregido.csv")
Data.informacion <- read_csv(ruta)
print(Data.informacion)
View(Ventas_USA)
prueba <-  Data.informacion %>% arrange(desc(NA_Sales)) %>%
arrange(desc( EU_Sales)) %>%
arrange(desc(JP_Sales)) %>%
arrange(desc(Other_Sales)) %>%
select(NA_Sales, EU_Sales, JP_Sales, Other_Sales)
texteo <- prueba  %>% select(NA_Sales) %>%
filter(NA_Sales >= 0.01 ) %>%
summarise(total_USA = n())
View(texteo)
texteo <- prueba  %>% summarise(totales = n())
texteo <- prueba  %>% select(NA_Sales) %>%
summarise(ganancia_total_USA = n())
texteo <- prueba  %>% select(NA_Sales) %>%
summarise(ganancia_total_USA = n())
texteo <- prueba  %>% select(NA_Sales) %>%
summarise(ganancia_total_USA = n())
texteo <- prueba  %>% group_by(NA_Sales) %>% summarise(ganancia_total_USA = n())
texteo <- prueba  %>% select(NA_Sales) %>%
filter(NA_Sales >= 0.01 ) %>%
summarise(ganancia_total_USA = n())
texteo <- prueba %>% select(NA_Sales) %>%
filter(NA_Sales >= 0.01) %>%
summarise(ganancias_totales_USA = n())
texteo_EU <- prueba %>% select(EU_Sales) %>%
filter(EU_Sales >= 0.01) %>%
summarise(ganancias_totales_USA = n())
texteo_JP <- prueba %>% select(JP_Sales) %>%
filter(JP_Sales >= 0.01) %>%
summarise(ganancias_totales_USA = n())
texteo_USA <- prueba %>% select(NA_Sales) %>%
filter(NA_Sales >= 0.01) %>%
summarise(ganancias_totales_USA = n())
texteo_Other <- prueba %>% select(Other_Sales) %>%
filter(Other_Sales >= 0.01) %>%
summarise(ganancias_totales_USA = n())
View(texteo_EU)
View(texteo_JP)
View(texteo_Other)
View(texteo_USA)
texteo_EU <- prueba %>% select(EU_Sales) %>%
filter(EU_Sales >= 0.01) %>%
summarise(ganancias_totales_EU = n())
texteo_JP <- prueba %>% select(JP_Sales) %>%
filter(JP_Sales >= 0.01) %>%
summarise(ganancias_totales_JP = n())
texteo_USA <- prueba %>% select(NA_Sales) %>%
filter(NA_Sales >= 0.01) %>%
summarise(ganancias_totales_USA = n())
texteo_Other <- prueba %>% select(Other_Sales) %>%
filter(Other_Sales >= 0.01) %>%
summarise(ganancias_totales_Other = n())
sum(prueba$NA_Sales)
texteo_EU <- prueba %>% select(EU_Sales) %>%
filter(EU_Sales >= 0.01) %>%
summarise(ganancias_totales_EU = sum())
texteo_EU <- prueba %>% select(EU_Sales) %>%
filter(EU_Sales >= 0.01) %>%
summarise(ganancias_totales_EU = sum())
texteo_EU <- prueba %>% select(EU_Sales) %>%
filter(EU_Sales >= 0.01) %>%
summary(ganancias_totales_EU = sum())
texteo_EU <- prueba %>% group_by(EU_Sales) %>%
filter(EU_Sales >= 0.01) %>%
summarise(ganancias_totales_EU = sum())
texteo_EU <- prueba %>% group_by(EU_Sales) %>%
filter(EU_Sales >= 0.01) %>%
summarise(ganancias_totales_EU = n())
ganancia_total_EU <- sum(prueba$EU_Sales)
ganancia_total_EU <- sum(prueba$EU_Sales)
ganancia_total_EU <- sum(prueba$EU_Sales)
ganancia_total_NA <- sum(prueba$NA_Sales)
ganancia_total_JP <- sum(prueba$JP_Sales)
ganancia_total_Other <- sum(prueba$Other_Sales)
ganancia_total_global <- sum(prueba)
sum(Data.informacion$Global_Sales)
ganancias <- data.frame(ganancia_total_EU, ganancia_total_JP, ganancia_total_NA, ganancia_total_Other)
View(ganancias)
rm(ganancias)
ganancias_totales <- c(2434.13,
1291.02,
4392.95,
797.75)
lugares <- c("NA",
"EU",
"JP",
"Other")
Ganancias <- data.frame(ganancias_totales, lugares)
View(Ganancias)
ganancias_totales <- c(2434.13,
1291.02,
4392.95,
797.75,
8915.85)
lugares <- c("NA",
"EU",
"JP",
"Other",
"global")
Ganancias <- data.frame(ganancias_totales, lugares)
ganancias_totales <- c(2434.13,
1291.02,
4392.95,
797.75)
lugares <- c("NA",
"EU",
"JP",
"Other")
Ganancias <- data.frame(ganancias_totales, lugares)
porcentaje_de_ganancias <-  Ganancias %>%
group_by(ganancias_totales, lugares) %>%
count() %>%
ungroup() %>%
mutate(porcentaje = ganancias_totales / sum(ganancias_totales) * 100)
View(porcentaje_de_ganancias)
sum(porcentaje_de_ganancias$porcentaje)
797.75)
lugares <- c("EU",
"JP",
"NA",
"Other")
Ganancias <- data.frame(ganancias_totales, lugares)
porcentaje_de_ganancias <-  Ganancias %>%
group_by(ganancias_totales, lugares) %>%
count() %>%
ungroup() %>%
mutate(porcentaje = ganancias_totales / sum(ganancias_totales) * 100)
ggplot(data = porcentaje_de_ganancias,
aes(x = "", y = porcentaje, fill = etype)) +
geom_bar(stat = "identity") +
geom_text(aes(label = paste0(round(porcentaje,),"%")),
position = position_stack(vjust = 0.5)) +
coord_polar(theta = "y") +
theme_void() +
labs(title = "distribucion", subtitle = "de las ventas en los continentes") +
theme(plot.title = element_text(size = 25, family = "serif")) +
theme(plot.subtitle = element_text(size = 15, family = "serif"))
ggplot(data = porcentaje_de_ganancias,
aes(x = "", y = porcentaje, fill = etype)) +
geom_bar(stat  = "identity") +
geom_text(aes(label = paste0(round(porcentaje,),"%")),
position = position_stack(vjust = 0.5)) +
coord_polar(theta = "y") +
theme_void() +
labs(title = "distribucion", subtitle = "de las ventas en los continentes") +
theme(plot.title = element_text(size = 25, family = "serif")) +
theme(plot.subtitle = element_text(size = 15, family = "serif"))
ggplot(data = porcentaje_de_ganancias,
aes(x = "", y = porcentaje, fill = lugares)) +
geom_bar(stat  = "identity") +
geom_text(aes(label = paste0(round(porcentaje,),"%")),
position = position_stack(vjust = 0.5)) +
coord_polar(theta = "y") +
theme_void() +
labs(title = "distribucion", subtitle = "de las ventas en los continentes") +
theme(plot.title = element_text(size = 25, family = "serif")) +
theme(plot.subtitle = element_text(size = 15, family = "serif"))
ggplot(data = porcentaje_de_ganancias,
aes(x = "", y = porcentaje, fill = lugares)) +
geom_bar(stat  = "identity") +
geom_text(aes(label = paste0(round(porcentaje,),"%")),
position = position_stack(vjust = 0.5)) +
coord_polar(theta = "y") +
theme_void() +
labs(title = "distribucion", subtitle = "de las ventas en los regiones") +
theme(plot.title = element_text(size = 25, family = "serif")) +
theme(plot.subtitle = element_text(size = 15, family = "serif"))
ggplot(data = porcentaje_de_ganancias,
aes(x = "", y = porcentaje, fill = lugares)) +
geom_bar(stat  = "identity") +
geom_text(aes(label = paste0(round(porcentaje,),"%")),
position = position_stack(vjust = 0.5)) +
coord_polar(theta = "y") +
theme_void() +
labs(title = "distribucion", subtitle = "de las ventas en las regiones") +
theme(plot.title = element_text(size = 25, family = "serif")) +
theme(plot.subtitle = element_text(size = 15, family = "serif"))
